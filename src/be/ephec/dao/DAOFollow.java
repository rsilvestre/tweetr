package be.ephec.dao;

import be.ephec.beans.User;
import be.ephec.exceptions.DAOException;

import java.sql.SQLException;

public class DAOFollow extends DAO implements DAOIFollow {

    private static final String SQL_INSERT = "INSERT INTO follow (followerId, followingId) VALUES (?,?)";
    private static final String SQL_DELETE = "DELETE FROM follow where (followerid = ? and followingid = ?)";
    private static final String SQL_DELTE_FOLLOWING = "DELETE FROM follow where followerid = ?";
    private static final String SQL_DELTE_FOLLOWER = "DELETE FROM follow where followingid = ?";

    public DAOFollow(DAOFactory daoFactory) {
        super(daoFactory);
    }

    @Override
    public void create(User user, String followingId) throws DAOException {
        try {
            this.executeUpdate(SQL_INSERT, (status, AutoGeneratedValue) -> {
                if (AutoGeneratedValue.next()) {
                    this.CloseConnection();
                } else {
                    throw new DAOException(
                            "Échec de la création du follow en base, aucun ID auto-généré retourné.");
                }
                if (status == 0) {
                    throw new DAOException(
                            "Échec de la création du follow l'utilisateur, aucune ligne ajoutée dans la table.");
                }
            }, user.getUserId(), followingId);
        } catch (SQLException e) {
            throw new DAOException(e);
        }
    }

    @Override
    public void delete(User user, String followingId) throws DAOException {
        try {
            this.executeUpdate(SQL_DELETE, (status, resultSet) -> {
                this.CloseConnection();
                if (status == 0) {
                    throw new DAOException("Échec de la suppression du follow l'utilisateur, aucune ligne n'a été supprimé de la table.");
                }
            }, user.getUserId(), followingId);
        } catch (SQLException e) {
            throw new DAOException(e);
        }
    }

    @Override
    public void deleteUserFollowing(int userId) throws DAOException {
        try {
            this.executeUpdate(SQL_DELTE_FOLLOWING, (status, resultSet) -> {
                if (status == 0) {
                    throw new DAOException(
                            "Échec de la suppression du follow l'utilisateur, aucune ligne n'a été supprimé de la table.");
                }
            }, userId);
        } catch (SQLException e) {
            throw new DAOException(e);
        }
    }

    @Override
    public void deleteUserFollower(int userId) throws DAOException {
        try {
            this.executeUpdate(SQL_DELTE_FOLLOWER, (status, resultSet) -> {
                if (status == 0) {
                    throw new DAOException(
                            "Échec de la suppression du follow l'utilisateur, aucune ligne n'a été supprimé de la table.");
                }
            }, userId);
        } catch (SQLException e) {
            throw new DAOException(e);
        }
    }
}
